#!/usr/bin/env ruby

require "fileutils"

class Todo
  def initialize(*argv)
    @argv = argv
    @todofile = "todo.do"

    unless File.exists? @todofile
      puts "TODO file not found! Creating..."
      FileUtils.touch(@todofile)
      puts "Created!"
    end

    if @argv[0] == '-a'
        add
    elsif @argv[0] == '-d'
        done
    elsif @argv[0] == '-h'
        help
    else
        list
    end
  end

  # Lists help information
  def help
    puts <<-help
    Commands
    --------
    add [task name] - Add a new task
    list - Lists all tasks
    done [task id] - Complete a task
    help - Prints out this information
    help
  end

  # Add task
  def add
    unless @argv[1]
      puts "Lacking argument [name]"
      exit
    end

    # Get contents of file, so we can append later.
    contents = File.read(@todofile)

    File.open(@todofile, 'w') do |f|
      todo = contents + @argv[1] + "\n"
      f.write(todo)
    end
  end

  # List all tasks
  def list
    file = File.read(@todofile)
    puts "No tasks!" if File.zero? @todofile

    # Read content
    contents = File.read(@todofile)

    # Show it with ids
    i = 0
    contents.each_line do |todo|
      i += 1
      puts "#{i}) #{todo}"
    end
  end

  # Finished a task
  def done
    unless @argv[1]
      puts "Lacking argument [id]"
      exit
    end

    # Put tasks into an array
    todos = File.read(@todofile).split("\n")

    unless todos
      puts "No tasks"
      exit
    end

    puts "Completed task: " + todos[@argv[1].to_i - 1]

    # Delete task from array and make string
    todos.delete_at(@argv[1].to_i - 1)
    content = todos.join("\n")

    # Update file
    File.open(@todofile, 'w') do |f|
      f.write(content)
    end
  end
end

todo = Todo.new(*ARGV)
